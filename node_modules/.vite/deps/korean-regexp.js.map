{
  "version": 3,
  "sources": ["../../korean-regexp/dist/index.es.js"],
  "sourcesContent": ["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar BASE = '가'.charCodeAt(0); // 한글 코드 시작: 44032\r\nvar INITIALS = ['ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];\r\nvar MEDIALS = ['ㅏ', 'ㅐ', 'ㅑ', 'ㅒ', 'ㅓ', 'ㅔ', 'ㅕ', 'ㅖ', 'ㅗ', 'ㅘ', 'ㅙ', 'ㅚ', 'ㅛ', 'ㅜ', 'ㅝ', 'ㅞ', 'ㅟ', 'ㅠ', 'ㅡ', 'ㅢ', 'ㅣ'];\r\nvar FINALES = ['', 'ㄱ', 'ㄲ', 'ㄳ', 'ㄴ', 'ㄵ', 'ㄶ', 'ㄷ', 'ㄹ', 'ㄺ', 'ㄻ', 'ㄼ', 'ㄽ', 'ㄾ', 'ㄿ', 'ㅀ', 'ㅁ', 'ㅂ', 'ㅄ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];\r\nvar MIXED = {\r\n    ㄲ: ['ㄱ', 'ㄱ'],\r\n    ㄳ: ['ㄱ', 'ㅅ'],\r\n    ㄵ: ['ㄴ', 'ㅈ'],\r\n    ㄶ: ['ㄴ', 'ㅎ'],\r\n    ㄺ: ['ㄹ', 'ㄱ'],\r\n    ㄻ: ['ㄹ', 'ㅁ'],\r\n    ㄼ: ['ㄹ', 'ㅂ'],\r\n    ㄽ: ['ㄹ', 'ㅅ'],\r\n    ㄾ: ['ㄹ', 'ㅌ'],\r\n    ㄿ: ['ㄹ', 'ㅍ'],\r\n    ㅀ: ['ㄹ', 'ㅎ'],\r\n    ㅄ: ['ㅂ', 'ㅅ'],\r\n    ㅆ: ['ㅅ', 'ㅅ'],\r\n    ㅘ: ['ㅗ', 'ㅏ'],\r\n    ㅙ: ['ㅗ', 'ㅐ'],\r\n    ㅚ: ['ㅗ', 'ㅣ'],\r\n    ㅝ: ['ㅜ', 'ㅓ'],\r\n    ㅞ: ['ㅜ', 'ㅔ'],\r\n    ㅟ: ['ㅜ', 'ㅣ'],\r\n    ㅢ: ['ㅡ', 'ㅣ'],\r\n};\r\nvar MEDIAL_RANGE = {\r\n    ㅗ: ['ㅗ', 'ㅚ'],\r\n    ㅜ: ['ㅜ', 'ㅟ'],\r\n    ㅡ: ['ㅡ', 'ㅢ'],\r\n};\r\nvar PRESENT_ON_KEYBOARD = [\r\n    'ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ',\r\n    'ㅏ', 'ㅐ', 'ㅑ', 'ㅒ', 'ㅓ', 'ㅔ', 'ㅕ', 'ㅖ', 'ㅗ', 'ㅛ', 'ㅜ', 'ㅠ', 'ㅡ', 'ㅣ',\r\n];\r\nvar KEYS = [\r\n    ['ㄱ', 'r'],\r\n    ['ㄲ', 'R'],\r\n    ['ㄴ', 's'],\r\n    ['ㄷ', 'e'],\r\n    ['ㄸ', 'E'],\r\n    ['ㄹ', 'f'],\r\n    ['ㅁ', 'a'],\r\n    ['ㅂ', 'q'],\r\n    ['ㅃ', 'Q'],\r\n    ['ㅅ', 't'],\r\n    ['ㅆ', 'T'],\r\n    ['ㅇ', 'd'],\r\n    ['ㅈ', 'w'],\r\n    ['ㅉ', 'W'],\r\n    ['ㅊ', 'c'],\r\n    ['ㅋ', 'z'],\r\n    ['ㅌ', 'x'],\r\n    ['ㅍ', 'v'],\r\n    ['ㅎ', 'g'],\r\n    ['ㅏ', 'k'],\r\n    ['ㅐ', 'o'],\r\n    ['ㅑ', 'i'],\r\n    ['ㅒ', 'O'],\r\n    ['ㅓ', 'j'],\r\n    ['ㅔ', 'p'],\r\n    ['ㅕ', 'u'],\r\n    ['ㅖ', 'P'],\r\n    ['ㅗ', 'h'],\r\n    ['ㅛ', 'y'],\r\n    ['ㅜ', 'n'],\r\n    ['ㅠ', 'b'],\r\n    ['ㅡ', 'm'],\r\n    ['ㅣ', 'l'],\r\n];\n\nfunction getPhonemes(char) {\r\n    var initial = '';\r\n    var medial = '';\r\n    var finale = '';\r\n    var initialOffset = -1;\r\n    var medialOffset = -1;\r\n    var finaleOffset = -1;\r\n    if (char.match(/[ㄱ-ㅎ]/)) {\r\n        initial = char;\r\n        initialOffset = INITIALS.join('').search(char);\r\n    }\r\n    else if (char.match(/[가-힣]/)) {\r\n        var tmp = char.charCodeAt(0) - BASE;\r\n        finaleOffset = tmp % FINALES.length;\r\n        medialOffset = ((tmp - finaleOffset) / FINALES.length) % MEDIALS.length;\r\n        initialOffset = ((tmp - finaleOffset) / FINALES.length - medialOffset) / MEDIALS.length;\r\n        initial = INITIALS[initialOffset];\r\n        medial = MEDIALS[medialOffset];\r\n        finale = FINALES[finaleOffset];\r\n    }\r\n    return { initial: initial, medial: medial, finale: finale, initialOffset: initialOffset, medialOffset: medialOffset, finaleOffset: finaleOffset };\r\n}\n\nvar postPositions = [\r\n    ['은', '는'],\r\n    ['이', '가'],\r\n    ['을', '를'],\r\n    ['과', '와'],\r\n].reduce(function (accum, _a) {\r\n    var p1 = _a[0], p2 = _a[1];\r\n    return (__spreadArray(__spreadArray([], accum, true), [\r\n        [RegExp(\"([\\uAC00-\\uD7A3]['\\\" ]{0,1})\".concat(p1, \"\\\\(\").concat(p2, \"\\\\)(\\\\s+)\"), 'g'), p1, p2],\r\n        [RegExp(\"([\\uAC00-\\uD7A3]['\\\" ]{0,1})\".concat(p2, \"\\\\(\").concat(p1, \"\\\\)(\\\\s+)\"), 'g'), p1, p2],\r\n    ], false));\r\n}, []);\r\nfunction correctPostpositions(text) {\r\n    return postPositions.reduce(function (prev, _a) {\r\n        var pattern = _a[0], p1 = _a[1], p2 = _a[2];\r\n        return prev.replace(pattern, function (whole, a1, a2) {\r\n            return \"\".concat(a1.replace(/\\s+$/, '')).concat(getPhonemes(a1).finale ? p1 : p2).concat(a2);\r\n        });\r\n    }, text);\r\n}\n\nfunction explode(text, _a) {\r\n    var _b = _a === void 0 ? {} : _a, _c = _b.grouped, grouped = _c === void 0 ? false : _c;\r\n    var accum = [];\r\n    text.split('').forEach(function (char) {\r\n        var _a = getPhonemes(char), initial = _a.initial, medial = _a.medial, finale = _a.finale, initialOffset = _a.initialOffset, medialOffset = _a.medialOffset, finaleOffset = _a.finaleOffset;\r\n        accum.push((initialOffset !== -1 || medialOffset !== -1 || finaleOffset !== -1\r\n            ? [initial, MIXED[medial] && PRESENT_ON_KEYBOARD.indexOf(medial) === -1 ? MIXED[medial] : medial, MIXED[finale] && PRESENT_ON_KEYBOARD.indexOf(finale) === -1 ? MIXED[finale] : finale].filter(Boolean)\r\n            : [char]).flat());\r\n    });\r\n    return grouped ? accum : accum.flat();\r\n}\n\nvar complexDict = Object.entries(MIXED).reduce(function (accum, _a) {\r\n    var _b;\r\n    var k = _a[0], v = _a[1];\r\n    return (__assign(__assign({}, accum), (_b = {}, _b[v.join('')] = k, _b)));\r\n}, {});\r\nvar isNotUndefined = function (e) { return typeof e !== 'undefined'; };\r\nfunction assemble(arr) {\r\n    var startIndex = arr.findIndex(function (e) { return MEDIALS.indexOf(e) !== -1; });\r\n    var endIndex = startIndex !== -1 && MEDIALS.indexOf(arr[startIndex + 1]) !== -1 ? startIndex + 1 : startIndex;\r\n    var initial = arr.slice(0, startIndex).join('');\r\n    var medial = arr.slice(startIndex, endIndex + 1).join('');\r\n    var finale = arr.slice(endIndex + 1).join('');\r\n    var initialOffset = INITIALS.indexOf(complexDict[initial] || initial);\r\n    var medialOffset = MEDIALS.indexOf(complexDict[medial] || medial);\r\n    var finaleOffset = FINALES.indexOf(complexDict[finale] || finale);\r\n    if (initialOffset !== -1 && medialOffset !== -1) {\r\n        return String.fromCharCode(BASE + initialOffset * (MEDIALS.length * FINALES.length) + medialOffset * FINALES.length + finaleOffset);\r\n    }\r\n    return arr.join('');\r\n}\r\nfunction implode(input) {\r\n    var chars = [];\r\n    // 인접한 모음을 하나의 복합 모음으로 합친다.\r\n    (typeof input === 'string' ? input.split('') : input).forEach(function (e, i, arr) {\r\n        if (typeof e === 'string' && chars.length > 0 && MEDIALS.indexOf(arr[i - 1]) !== -1 && MEDIALS.indexOf(e) !== -1 && complexDict[\"\".concat(arr[i - 1]).concat(e)]) {\r\n            chars[chars.length - 1] = complexDict[\"\".concat(arr[i - 1]).concat(e)];\r\n        }\r\n        else {\r\n            chars.push(e);\r\n        }\r\n    });\r\n    var cursor = { medial: null, finales: [] };\r\n    var items = [cursor];\r\n    // 모음으로 시작하는 그룹들을 만든다. (grouped로 넘어온 항목들은 유지)\r\n    chars.forEach(function (e) {\r\n        if (Array.isArray(e)) {\r\n            cursor = { medial: null, finales: [] };\r\n            items.push({ grouped: e, finales: [] });\r\n            items.push(cursor);\r\n        }\r\n        else if (MEDIALS.indexOf(e) !== -1) {\r\n            cursor = { medial: e, finales: [] };\r\n            items.push(cursor);\r\n        }\r\n        else {\r\n            cursor.finales.push(e);\r\n        }\r\n    });\r\n    // 각 그룹을 순회하면서 복합자음을 정리하고, 앞 그룹에서 종성으로 사용하고 남은 자음들을 초성으로 가져온다.\r\n    items.forEach(function (curr, i, arr) {\r\n        if (i > 0) {\r\n            var prev = arr[i - 1];\r\n            if (!prev.medial || prev.finales.length === 1) {\r\n                curr.initials = prev.finales;\r\n                prev.finales = [];\r\n            }\r\n            else {\r\n                var _a = prev.finales, finale = _a[0], initials = _a.slice(1);\r\n                curr.initials = initials;\r\n                prev.finales = finale ? [finale] : [];\r\n            }\r\n            if (curr.finales.length > 2 || (i === items.length - 1 && curr.finales.length > 1)) {\r\n                var _b = curr.finales, a = _b[0], b = _b[1], rest = _b.slice(2);\r\n                if (complexDict[\"\".concat(a).concat(b)]) {\r\n                    curr.finales = __spreadArray([complexDict[\"\".concat(a).concat(b)]], rest, true);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    // 각 글자에 해당하는 블록 단위로 나눈 후 조합한다.\r\n    var groups = [];\r\n    items.forEach(function (_a) {\r\n        var _b = _a.initials, initials = _b === void 0 ? [] : _b, medial = _a.medial, finales = _a.finales, grouped = _a.grouped;\r\n        if (grouped) {\r\n            groups.push(grouped);\r\n        }\r\n        else {\r\n            var pre = initials.slice();\r\n            var initial = pre.pop();\r\n            var finale = finales[0], post = finales.slice(1);\r\n            if (FINALES.indexOf(finale) === -1) {\r\n                post = __spreadArray([finale], post, true);\r\n                finale = '';\r\n            }\r\n            pre.filter(isNotUndefined).forEach(function (e) { return groups.push([e]); });\r\n            groups.push([initial, medial, finale].filter(Boolean));\r\n            post.filter(isNotUndefined).forEach(function (e) { return groups.push([e]); });\r\n        }\r\n    });\r\n    return groups.map(assemble).join('');\r\n}\n\nvar EN_TO_KR = Object.values(KEYS)\r\n    .reduce(function (accum, _a) {\r\n    var _b;\r\n    var kr = _a[0], en = _a[1];\r\n    return (__assign(__assign({}, accum), (_b = {}, _b[en] = kr, _b)));\r\n}, {});\r\nfunction engToKor(text) {\r\n    return implode(text.split('').map(function (char) { return EN_TO_KR[char] || char; }).join(''));\r\n}\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\r\nvar reHasRegExpChar = RegExp(reRegExpChar.source);\r\nfunction escapeRegExp(string) {\r\n    return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\\\$&') : string || '';\r\n}\n\nvar getInitialSearchRegExp = function (initial, allowOnlyInitial) {\r\n    if (allowOnlyInitial === void 0) { allowOnlyInitial = false; }\r\n    var initialOffset = INITIALS.indexOf(initial);\r\n    if (initialOffset !== -1) {\r\n        var baseCode = initialOffset * MEDIALS.length * FINALES.length + BASE;\r\n        return \"[\".concat(allowOnlyInitial ? initial : '').concat(String.fromCharCode(baseCode), \"-\").concat(String.fromCharCode(baseCode + MEDIALS.length * FINALES.length - 1), \"]\");\r\n    }\r\n    return initial;\r\n};\r\nvar FUZZY = \"__\".concat(parseInt('fuzzy', 36), \"__\");\r\nvar IGNORE_SPACE = \"__\".concat(parseInt('ignorespace', 36), \"__\");\r\nvar getRegExp = (function () {\r\n    var lastSearch;\r\n    var lastPattern;\r\n    return function (search, _a) {\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.initialSearch, initialSearch = _c === void 0 ? false : _c, _d = _b.startsWith, startsWith = _d === void 0 ? false : _d, _e = _b.endsWith, endsWith = _e === void 0 ? false : _e, _f = _b.ignoreSpace, ignoreSpace = _f === void 0 ? false : _f, _g = _b.ignoreCase, ignoreCase = _g === void 0 ? true : _g, _h = _b.global, global = _h === void 0 ? false : _h, _j = _b.fuzzy, fuzzy = _j === void 0 ? false : _j, _k = _b.nonCaptureGroup, nonCaptureGroup = _k === void 0 ? false : _k, _l = _b.engToKor, _engToKor = _l === void 0 ? false : _l;\r\n        if (lastSearch === search) {\r\n            return lastPattern;\r\n        }\r\n        var _search = search;\r\n        var additionalPatterns = [];\r\n        if (_engToKor && search.trim().match(/^([a-zA-Z0-9\\s]{2,})$/)) {\r\n            var kor = engToKor(search.trim());\r\n            if (kor.match(/^[가-힣ㄱ-ㅎ0-9]/)) {\r\n                _search = kor;\r\n                additionalPatterns.push(escapeRegExp(search.trim()));\r\n            }\r\n        }\r\n        var frontChars = _search.split('');\r\n        var lastChar = frontChars.slice(-1)[0];\r\n        var lastCharPattern = '';\r\n        var phonemes = getPhonemes(lastChar || '');\r\n        // 마지막 글자가 한글인 경우만 수행\r\n        if (phonemes.initialOffset !== -1) {\r\n            frontChars = frontChars.slice(0, -1);\r\n            var initial = phonemes.initial, medial = phonemes.medial, finale = phonemes.finale, initialOffset = phonemes.initialOffset, medialOffset = phonemes.medialOffset;\r\n            // 해당 초성으로 시작하는 첫번째 문자 : 가, 나, 다, ... , 하\r\n            var baseCode = initialOffset * MEDIALS.length * FINALES.length + BASE;\r\n            var patterns = [];\r\n            switch (true) {\r\n                // case 1: 종성으로 끝나는 경우 (받침이 있는 경우)\r\n                case finale !== '': {\r\n                    // 마지막 글자\r\n                    patterns.push(lastChar);\r\n                    // 종성이 초성으로 사용 가능한 경우\r\n                    if (INITIALS.includes(finale)) {\r\n                        patterns.push(\"\".concat(String.fromCharCode(baseCode + medialOffset * FINALES.length)).concat(getInitialSearchRegExp(finale)));\r\n                    }\r\n                    // 종성이 복합 자음인 경우, 두 개의 자음으로 분리하여 각각 받침과 초성으로 사용\r\n                    if (MIXED[finale]) {\r\n                        patterns.push(\"\".concat(String.fromCharCode(baseCode + medialOffset * FINALES.length + FINALES.join('').search(MIXED[finale][0]) + 1)).concat(getInitialSearchRegExp(MIXED[finale][1])));\r\n                    }\r\n                    break;\r\n                }\r\n                // case 2: 중성으로 끝나는 경우 (받침이 없는 경우)\r\n                case medial !== '': {\r\n                    var from = void 0, to = void 0;\r\n                    // 중성이 복합 모음인 경우 범위를 확장하여 적용\r\n                    if (MEDIAL_RANGE[medial]) {\r\n                        from = baseCode + MEDIALS.join('').search(MEDIAL_RANGE[medial][0]) * FINALES.length;\r\n                        to = baseCode + MEDIALS.join('').search(MEDIAL_RANGE[medial][1]) * FINALES.length + FINALES.length - 1;\r\n                    }\r\n                    else {\r\n                        from = baseCode + medialOffset * FINALES.length;\r\n                        to = from + FINALES.length - 1;\r\n                    }\r\n                    patterns.push(\"[\".concat(String.fromCharCode(from), \"-\").concat(String.fromCharCode(to), \"]\"));\r\n                    break;\r\n                }\r\n                // case 3: 초성만 입력된 경우\r\n                case initial !== '': {\r\n                    patterns.push(getInitialSearchRegExp(initial, true));\r\n                    break;\r\n                }\r\n            }\r\n            lastCharPattern = patterns.length > 1 ? (nonCaptureGroup ? \"(?:\".concat(patterns.join('|'), \")\") : \"(\".concat(patterns.join('|'), \")\")) : patterns[0];\r\n        }\r\n        var glue = fuzzy ? FUZZY : ignoreSpace ? IGNORE_SPACE : '';\r\n        var frontCharsPattern = initialSearch\r\n            ? frontChars.map(function (char) { return (char.search(/[ㄱ-ㅎ]/) !== -1 ? getInitialSearchRegExp(char, true) : escapeRegExp(char)); }).join(glue)\r\n            : escapeRegExp(frontChars.join(glue));\r\n        var isNeedJointFrontAndLast = frontCharsPattern.trim() !== '' && lastCharPattern.trim() !== '';\r\n        var charsPattern = isNeedJointFrontAndLast ? \"\".concat(frontCharsPattern).concat(glue).concat(lastCharPattern) : \"\".concat(frontCharsPattern).concat(lastCharPattern);\r\n        var pattern = (startsWith ? '^' : '') + charsPattern + (endsWith ? '$' : '');\r\n        if (glue) {\r\n            pattern = pattern.replace(RegExp(FUZZY, 'g'), '.*').replace(RegExp(IGNORE_SPACE, 'g'), '\\\\s*');\r\n        }\r\n        if (additionalPatterns.length > 0) {\r\n            pattern = __spreadArray(__spreadArray([], additionalPatterns, true), [pattern], false).map(function (e) { return \"(\".concat(e, \")\"); }).join('|');\r\n        }\r\n        lastPattern = RegExp(pattern, (global ? 'g' : '') + (ignoreCase ? 'i' : ''));\r\n        return lastPattern;\r\n    };\r\n})();\n\nvar KR_TO_EN = Object.values(KEYS)\r\n    .reduce(function (accum, _a) {\r\n    var _b;\r\n    var kr = _a[0], en = _a[1];\r\n    return (__assign(__assign({}, accum), (_b = {}, _b[kr] = en, _b)));\r\n}, {});\r\nfunction korToEng(text) {\r\n    return text.split('').map(function (char) { return explode(char, { grouped: false }).map(function (e) { return KR_TO_EN[e] || e; }); }).flat().join('');\r\n}\n\nexport { correctPostpositions, engToKor, explode, getPhonemes, getRegExp, implode, korToEng };\n//# sourceMappingURL=index.es.js.map\n"],
  "mappings": "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",
  "names": ["__assign", "_a"]
}
